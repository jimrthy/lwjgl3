<!--
Copyright LWJGL. All rights reserved.
License terms: http://lwjgl.org/license.php
-->
<project name="native-linux" basedir="../.." xmlns:if="ant:if" xmlns:unless="ant:unless">
	<import file="../build-definitions.xml"/>

	<condition property="LWJGL_LIBRARY" value="liblwjgl.so" else="liblwjgl32.so">
		<equals arg1="${build.arch}" arg2="x64"/>
	</condition>

	<condition property="build.arch.x64" value="true" else="false">
		<equals arg1="${build.arch}" arg2="x64"/>
	</condition>

	<fileset id="link-objects" dir="${bin.native}" includes="*.o"/>
	<fileset id="link-libraries" dir="${lib}/linux/${build.arch}/">
		<include name="libffi.a"/>
	</fileset>

	<property name="warnings" value="-Werror -Wfatal-errors -Wall -Wextra -pedantic -Wno-extended-offsetof"/>

	<property name="src.include.rel" value="../../../${src.include}"/>
	<property name="src.native.rel" value="../../../${src.native}"/>
	<macrodef name="compile">
		<element name="arguments"/>
		<sequential>
			<apply dir="${bin.native}" executable="gcc" dest="${bin.native}" skipemptyfilesets="true" failonerror="true" parallel="true" taskname="Compiler">
				<arg line="-c -std=c11"/>
				<arg line="-m64" if:true="${build.arch.x64}"/>
				<arg line="-m32 -mfpmath=sse -msse -msse2" unless:true="${build.arch.x64}"/>
				<arg line="-O3 -fPIC ${warnings} -pthread -D_XOPEN_SOURCE=700 -DLWJGL_LINUX -DLWJGL_${build.arch}"/>

				<arg value="-I${java.home}/../include"/>
				<arg value="-I${java.home}/../include/linux"/>

				<arg value="-I${src.include.rel}/system"/>
				<arg value="-I${src.include.rel}/system/linux"/>

				<arguments/>

				<regexpmapper from="(\w+)\.c" to="\1.o"/>
			</apply>
		</sequential>
	</macrodef>

	<target name="compile-native-platform">
		<!-- COMPILE -->
		<compile>
			<arguments>
				<arg value="-I${src.include.rel}/system/jemalloc"/>
				<arg value="-I${src.include.rel}/system/libffi"/>
				<arg value="-I${src.include.rel}/system/xxhash"/>
				<arg value="-I${src.native.rel}/system/xxhash"/> <!-- xxhash.c is included in the binding -->
				<fileset dir=".">
					<include name="${src.native}/system/*.c"/>
					<include name="${src.native}/system/libffi/*.c"/>
					<include name="${src.generated.native}/system/*.c"/>
					<include name="${src.generated.native}/system/jemalloc/*.c"/>
					<include name="${src.generated.native}/system/libc/*.c"/>
					<include name="${src.generated.native}/system/libffi/*.c"/>
					<include name="${src.generated.native}/system/simd/*.c"/>
					<exclude name="${src.generated.native}/system/simd/*SSE3.c"/>
					<include name="${src.generated.native}/system/linux/*.c"/>
					<include name="${src.generated.native}/system/xxhash/*.c"/>
				</fileset>
			</arguments>
		</compile>
		<compile>
			<arguments>
				<arg value="-msse3"/>
				<fileset dir=".">
					<include name="${src.generated.native}/system/simd/*SSE3.c"/>
				</fileset>
			</arguments>
		</compile>

		<!-- Each binding is compiled separately -->

		<compile if:true="${binding.egl}">
			<arguments>
				<arg value="-I${src.include.rel}/egl"/>
				<fileset dir="." includes="${src.generated.native}/egl/*.c"/>
			</arguments>
		</compile>

		<compile if:true="${binding.glfw}">
			<arguments>
				<arg value="-I${src.include.rel}/glfw"/>
				<fileset dir=".">
					<include name="${src.generated.native}/glfw/*.c"/>
				</fileset>
			</arguments>
		</compile>

		<compile if:true="${binding.opencl}">
			<arguments>
				<arg value="-I${src.include.rel}/opencl"/>
				<fileset dir="." includes="${src.generated.native}/opencl/*.c"/>
			</arguments>
		</compile>

		<compile if:true="${binding.opengl}">
			<arguments>
				<arg value="-I${src.include.rel}/opengl/glx"/>
				<fileset dir=".">
					<include name="${src.generated.native}/opengl/glx/*.c"/>
				</fileset>
			</arguments>
		</compile>

		<compile if:true="${binding.stb}">
			<arguments>
				<arg value="-isystem${src.include.rel}/stb"/>
				<fileset dir="." includes="${src.generated.native}/stb/*.c"/>
			</arguments>
		</compile>


		<!-- LINK -->
		<uptodate property="link-uptodate" targetfile="${lib}/${LWJGL_LIBRARY}">
			<srcfiles file="config/${platform}/build.xml"/>
			<srcfiles refid="link-objects"/>
			<srcfiles refid="link-libraries"/>
		</uptodate>

		<antcall target="-link-if-necessary"/>
	</target>

	<target name="-link-if-necessary" unless="link-uptodate">
		<antcall target="-link"/>
	</target>

	<target name="-update-dependencies-x86">
		<mkdir dir="${lib}/linux"/>
		<mkdir dir="${lib}/linux/x86"/>

		<update-dependency name="libffi (x86)" artifact="x86/libffi.a"/>

		<update-dependency name="jemalloc (x86)" artifact="x86/libjemalloc.so" dest="${lib}/libjemalloc32.so"/>
		<update-dependency name="glfw3 (x86)" artifact="x86/libglfw.so" dest="${lib}/libglfw32.so" if:true="${binding.glfw}"/>
		<update-dependency name="OpenAL32 (x86)" artifact="x86/libopenal.so" dest="${lib}/libopenal32.so" if:true="${binding.openal}"/>
	</target>

	<target name="-update-dependencies-x64">
		<mkdir dir="${lib}/linux"/>
		<mkdir dir="${lib}/linux/x64"/>

		<update-dependency name="libffi (x64)" artifact="x64/libffi.a"/>

		<update-dependency name="jemalloc (x64)" artifact="x64/libjemalloc.so" dest="${lib}" if:true="${binding.openal}"/>
		<update-dependency name="glfw3 (x64)" artifact="x64/libglfw.so" dest="${lib}" if:true="${binding.glfw}"/>
		<update-dependency name="OpenAL32 (x64)" artifact="x64/libopenal.so" dest="${lib}" if:true="${binding.openal}"/>
	</target>

	<target name="-update-dependencies" unless="${build.offline}">
		<antcall target="-update-dependencies-${build.arch}"/>
	</target>

	<target name="-link" depends="-update-dependencies">
		<local name="version.script"/>
		<property name="version.script" location="config/linux/version.script"/>

		<local name="arch.postfix"/>
		<property name="arch.postfix" value="64" if:true="${build.arch.x64}"/>
		<property name="arch.postfix" value="" unless:true="${build.arch.x64}"/>

		<apply executable="gcc" failonerror="true" parallel="true" taskname="Linker">
			<srcfile/>
			<arg value="-shared"/>
			<arg value="-m64" if:true="${build.arch.x64}"/>
			<arg value="-m32" unless:true="${build.arch.x64}"/>

			<arg line="-fPIC -pthread -o ${lib}/${LWJGL_LIBRARY}"/>

			<arg line="-L/usr/X11R6/lib${arch.postfix} -L/usr/X11/lib${arch.postfix}"/>
			<arg value="-lm"/>
			<arg value="-lrt"/>
			<arg value="-lpthread"/>

			<arg line="-Xlinker --version-script -Xlinker ${version.script}"/>

			<fileset refid="link-objects"/>
			<fileset refid="link-libraries"/>
		</apply>

		<apply executable="strip" failonerror="true" taskname="Symbol strip">
			<filelist dir="${lib}" files="${LWJGL_LIBRARY}"/>
		</apply>

		<apply executable="${org.lwjgl.upx}/upx" failonerror="true" taskname="UPX" if:set="org.lwjgl.upx">
			<arg value="--best"/>
			<filelist dir="${lib}" files="${LWJGL_LIBRARY}"/>
		</apply>
	</target>
</project>